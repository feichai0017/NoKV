// Use protos/gen.sh to generate .pb.go files.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: pb.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManifestChange_Operation int32

const (
	ManifestChange_CREATE ManifestChange_Operation = 0
	ManifestChange_DELETE ManifestChange_Operation = 1
)

// Enum value maps for ManifestChange_Operation.
var (
	ManifestChange_Operation_name = map[int32]string{
		0: "CREATE",
		1: "DELETE",
	}
	ManifestChange_Operation_value = map[string]int32{
		"CREATE": 0,
		"DELETE": 1,
	}
)

func (x ManifestChange_Operation) Enum() *ManifestChange_Operation {
	p := new(ManifestChange_Operation)
	*p = x
	return p
}

func (x ManifestChange_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ManifestChange_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_proto_enumTypes[0].Descriptor()
}

func (ManifestChange_Operation) Type() protoreflect.EnumType {
	return &file_pb_proto_enumTypes[0]
}

func (x ManifestChange_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ManifestChange_Operation.Descriptor instead.
func (ManifestChange_Operation) EnumDescriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{3, 0}
}

type AdminCommand_Type int32

const (
	AdminCommand_UNKNOWN AdminCommand_Type = 0
	AdminCommand_SPLIT   AdminCommand_Type = 1
	AdminCommand_MERGE   AdminCommand_Type = 2
)

// Enum value maps for AdminCommand_Type.
var (
	AdminCommand_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "SPLIT",
		2: "MERGE",
	}
	AdminCommand_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"SPLIT":   1,
		"MERGE":   2,
	}
)

func (x AdminCommand_Type) Enum() *AdminCommand_Type {
	p := new(AdminCommand_Type)
	*p = x
	return p
}

func (x AdminCommand_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminCommand_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_proto_enumTypes[1].Descriptor()
}

func (AdminCommand_Type) Type() protoreflect.EnumType {
	return &file_pb_proto_enumTypes[1]
}

func (x AdminCommand_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminCommand_Type.Descriptor instead.
func (AdminCommand_Type) EnumDescriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{10, 0}
}

type KV struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Key       []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value     []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	UserMeta  []byte                 `protobuf:"bytes,3,opt,name=user_meta,json=userMeta,proto3" json:"user_meta,omitempty"`
	Version   uint64                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	ExpiresAt uint64                 `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Meta      []byte                 `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
	// Stream id is used to identify which stream the KV came from.
	StreamId      uint32 `protobuf:"varint,10,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KV) Reset() {
	*x = KV{}
	mi := &file_pb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KV) ProtoMessage() {}

func (x *KV) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KV.ProtoReflect.Descriptor instead.
func (*KV) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{0}
}

func (x *KV) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KV) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KV) GetUserMeta() []byte {
	if x != nil {
		return x.UserMeta
	}
	return nil
}

func (x *KV) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *KV) GetExpiresAt() uint64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *KV) GetMeta() []byte {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *KV) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

type KVList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kv            []*KV                  `protobuf:"bytes,1,rep,name=kv,proto3" json:"kv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KVList) Reset() {
	*x = KVList{}
	mi := &file_pb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KVList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVList) ProtoMessage() {}

func (x *KVList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVList.ProtoReflect.Descriptor instead.
func (*KVList) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{1}
}

func (x *KVList) GetKv() []*KV {
	if x != nil {
		return x.Kv
	}
	return nil
}

type ManifestChangeSet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A set of changes that are applied atomically.
	Changes       []*ManifestChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManifestChangeSet) Reset() {
	*x = ManifestChangeSet{}
	mi := &file_pb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManifestChangeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestChangeSet) ProtoMessage() {}

func (x *ManifestChangeSet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestChangeSet.ProtoReflect.Descriptor instead.
func (*ManifestChangeSet) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{2}
}

func (x *ManifestChangeSet) GetChanges() []*ManifestChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

type ManifestChange struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Id            uint64                   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Op            ManifestChange_Operation `protobuf:"varint,2,opt,name=Op,proto3,enum=pb.ManifestChange_Operation" json:"Op,omitempty"`
	Level         uint32                   `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`      // Only used for CREATE
	Checksum      []byte                   `protobuf:"bytes,4,opt,name=Checksum,proto3" json:"Checksum,omitempty"` // Only used for CREATE
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManifestChange) Reset() {
	*x = ManifestChange{}
	mi := &file_pb_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManifestChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestChange) ProtoMessage() {}

func (x *ManifestChange) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestChange.ProtoReflect.Descriptor instead.
func (*ManifestChange) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{3}
}

func (x *ManifestChange) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ManifestChange) GetOp() ManifestChange_Operation {
	if x != nil {
		return x.Op
	}
	return ManifestChange_CREATE
}

func (x *ManifestChange) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ManifestChange) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

type TableIndex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offsets       []*BlockOffset         `protobuf:"bytes,1,rep,name=offsets,proto3" json:"offsets,omitempty"`
	BloomFilter   []byte                 `protobuf:"bytes,2,opt,name=bloomFilter,proto3" json:"bloomFilter,omitempty"`
	MaxVersion    uint64                 `protobuf:"varint,3,opt,name=maxVersion,proto3" json:"maxVersion,omitempty"`
	KeyCount      uint32                 `protobuf:"varint,4,opt,name=keyCount,proto3" json:"keyCount,omitempty"`
	StaleDataSize uint32                 `protobuf:"varint,5,opt,name=staleDataSize,proto3" json:"staleDataSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableIndex) Reset() {
	*x = TableIndex{}
	mi := &file_pb_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableIndex) ProtoMessage() {}

func (x *TableIndex) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableIndex.ProtoReflect.Descriptor instead.
func (*TableIndex) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{4}
}

func (x *TableIndex) GetOffsets() []*BlockOffset {
	if x != nil {
		return x.Offsets
	}
	return nil
}

func (x *TableIndex) GetBloomFilter() []byte {
	if x != nil {
		return x.BloomFilter
	}
	return nil
}

func (x *TableIndex) GetMaxVersion() uint64 {
	if x != nil {
		return x.MaxVersion
	}
	return 0
}

func (x *TableIndex) GetKeyCount() uint32 {
	if x != nil {
		return x.KeyCount
	}
	return 0
}

func (x *TableIndex) GetStaleDataSize() uint32 {
	if x != nil {
		return x.StaleDataSize
	}
	return 0
}

type BlockOffset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Offset        uint32                 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Len           uint32                 `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockOffset) Reset() {
	*x = BlockOffset{}
	mi := &file_pb_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockOffset) ProtoMessage() {}

func (x *BlockOffset) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockOffset.ProtoReflect.Descriptor instead.
func (*BlockOffset) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{5}
}

func (x *BlockOffset) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *BlockOffset) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *BlockOffset) GetLen() uint32 {
	if x != nil {
		return x.Len
	}
	return 0
}

type RegionPeer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreId       uint64                 `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	PeerId        uint64                 `protobuf:"varint,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegionPeer) Reset() {
	*x = RegionPeer{}
	mi := &file_pb_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionPeer) ProtoMessage() {}

func (x *RegionPeer) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionPeer.ProtoReflect.Descriptor instead.
func (*RegionPeer) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{6}
}

func (x *RegionPeer) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *RegionPeer) GetPeerId() uint64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

type RegionMeta struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartKey         []byte                 `protobuf:"bytes,2,opt,name=start_key,json=startKey,proto3" json:"start_key,omitempty"`
	EndKey           []byte                 `protobuf:"bytes,3,opt,name=end_key,json=endKey,proto3" json:"end_key,omitempty"`
	EpochVersion     uint64                 `protobuf:"varint,4,opt,name=epoch_version,json=epochVersion,proto3" json:"epoch_version,omitempty"`
	EpochConfVersion uint64                 `protobuf:"varint,5,opt,name=epoch_conf_version,json=epochConfVersion,proto3" json:"epoch_conf_version,omitempty"`
	Peers            []*RegionPeer          `protobuf:"bytes,6,rep,name=peers,proto3" json:"peers,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RegionMeta) Reset() {
	*x = RegionMeta{}
	mi := &file_pb_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionMeta) ProtoMessage() {}

func (x *RegionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionMeta.ProtoReflect.Descriptor instead.
func (*RegionMeta) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{7}
}

func (x *RegionMeta) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RegionMeta) GetStartKey() []byte {
	if x != nil {
		return x.StartKey
	}
	return nil
}

func (x *RegionMeta) GetEndKey() []byte {
	if x != nil {
		return x.EndKey
	}
	return nil
}

func (x *RegionMeta) GetEpochVersion() uint64 {
	if x != nil {
		return x.EpochVersion
	}
	return 0
}

func (x *RegionMeta) GetEpochConfVersion() uint64 {
	if x != nil {
		return x.EpochConfVersion
	}
	return 0
}

func (x *RegionMeta) GetPeers() []*RegionPeer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type SplitCommand struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ParentRegionId uint64                 `protobuf:"varint,1,opt,name=parent_region_id,json=parentRegionId,proto3" json:"parent_region_id,omitempty"`
	SplitKey       []byte                 `protobuf:"bytes,2,opt,name=split_key,json=splitKey,proto3" json:"split_key,omitempty"`
	Child          *RegionMeta            `protobuf:"bytes,3,opt,name=child,proto3" json:"child,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SplitCommand) Reset() {
	*x = SplitCommand{}
	mi := &file_pb_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SplitCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitCommand) ProtoMessage() {}

func (x *SplitCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitCommand.ProtoReflect.Descriptor instead.
func (*SplitCommand) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{8}
}

func (x *SplitCommand) GetParentRegionId() uint64 {
	if x != nil {
		return x.ParentRegionId
	}
	return 0
}

func (x *SplitCommand) GetSplitKey() []byte {
	if x != nil {
		return x.SplitKey
	}
	return nil
}

func (x *SplitCommand) GetChild() *RegionMeta {
	if x != nil {
		return x.Child
	}
	return nil
}

type MergeCommand struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TargetRegionId uint64                 `protobuf:"varint,1,opt,name=target_region_id,json=targetRegionId,proto3" json:"target_region_id,omitempty"`
	SourceRegionId uint64                 `protobuf:"varint,2,opt,name=source_region_id,json=sourceRegionId,proto3" json:"source_region_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MergeCommand) Reset() {
	*x = MergeCommand{}
	mi := &file_pb_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeCommand) ProtoMessage() {}

func (x *MergeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeCommand.ProtoReflect.Descriptor instead.
func (*MergeCommand) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{9}
}

func (x *MergeCommand) GetTargetRegionId() uint64 {
	if x != nil {
		return x.TargetRegionId
	}
	return 0
}

func (x *MergeCommand) GetSourceRegionId() uint64 {
	if x != nil {
		return x.SourceRegionId
	}
	return 0
}

type AdminCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          AdminCommand_Type      `protobuf:"varint,1,opt,name=type,proto3,enum=pb.AdminCommand_Type" json:"type,omitempty"`
	Split         *SplitCommand          `protobuf:"bytes,2,opt,name=split,proto3" json:"split,omitempty"`
	Merge         *MergeCommand          `protobuf:"bytes,3,opt,name=merge,proto3" json:"merge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminCommand) Reset() {
	*x = AdminCommand{}
	mi := &file_pb_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCommand) ProtoMessage() {}

func (x *AdminCommand) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCommand.ProtoReflect.Descriptor instead.
func (*AdminCommand) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{10}
}

func (x *AdminCommand) GetType() AdminCommand_Type {
	if x != nil {
		return x.Type
	}
	return AdminCommand_UNKNOWN
}

func (x *AdminCommand) GetSplit() *SplitCommand {
	if x != nil {
		return x.Split
	}
	return nil
}

func (x *AdminCommand) GetMerge() *MergeCommand {
	if x != nil {
		return x.Merge
	}
	return nil
}

var File_pb_proto protoreflect.FileDescriptor

const file_pb_proto_rawDesc = "" +
	"\n" +
	"\bpb.proto\x12\x02pb\"\xb3\x01\n" +
	"\x02KV\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x1b\n" +
	"\tuser_meta\x18\x03 \x01(\fR\buserMeta\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x04R\aversion\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x04R\texpiresAt\x12\x12\n" +
	"\x04meta\x18\x06 \x01(\fR\x04meta\x12\x1b\n" +
	"\tstream_id\x18\n" +
	" \x01(\rR\bstreamId\" \n" +
	"\x06KVList\x12\x16\n" +
	"\x02kv\x18\x01 \x03(\v2\x06.pb.KVR\x02kv\"A\n" +
	"\x11ManifestChangeSet\x12,\n" +
	"\achanges\x18\x01 \x03(\v2\x12.pb.ManifestChangeR\achanges\"\xa5\x01\n" +
	"\x0eManifestChange\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x04R\x02Id\x12,\n" +
	"\x02Op\x18\x02 \x01(\x0e2\x1c.pb.ManifestChange.OperationR\x02Op\x12\x14\n" +
	"\x05Level\x18\x03 \x01(\rR\x05Level\x12\x1a\n" +
	"\bChecksum\x18\x04 \x01(\fR\bChecksum\"#\n" +
	"\tOperation\x12\n" +
	"\n" +
	"\x06CREATE\x10\x00\x12\n" +
	"\n" +
	"\x06DELETE\x10\x01\"\xbb\x01\n" +
	"\n" +
	"TableIndex\x12)\n" +
	"\aoffsets\x18\x01 \x03(\v2\x0f.pb.BlockOffsetR\aoffsets\x12 \n" +
	"\vbloomFilter\x18\x02 \x01(\fR\vbloomFilter\x12\x1e\n" +
	"\n" +
	"maxVersion\x18\x03 \x01(\x04R\n" +
	"maxVersion\x12\x1a\n" +
	"\bkeyCount\x18\x04 \x01(\rR\bkeyCount\x12$\n" +
	"\rstaleDataSize\x18\x05 \x01(\rR\rstaleDataSize\"I\n" +
	"\vBlockOffset\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\rR\x06offset\x12\x10\n" +
	"\x03len\x18\x03 \x01(\rR\x03len\"@\n" +
	"\n" +
	"RegionPeer\x12\x19\n" +
	"\bstore_id\x18\x01 \x01(\x04R\astoreId\x12\x17\n" +
	"\apeer_id\x18\x02 \x01(\x04R\x06peerId\"\xcb\x01\n" +
	"\n" +
	"RegionMeta\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1b\n" +
	"\tstart_key\x18\x02 \x01(\fR\bstartKey\x12\x17\n" +
	"\aend_key\x18\x03 \x01(\fR\x06endKey\x12#\n" +
	"\repoch_version\x18\x04 \x01(\x04R\fepochVersion\x12,\n" +
	"\x12epoch_conf_version\x18\x05 \x01(\x04R\x10epochConfVersion\x12$\n" +
	"\x05peers\x18\x06 \x03(\v2\x0e.pb.RegionPeerR\x05peers\"{\n" +
	"\fSplitCommand\x12(\n" +
	"\x10parent_region_id\x18\x01 \x01(\x04R\x0eparentRegionId\x12\x1b\n" +
	"\tsplit_key\x18\x02 \x01(\fR\bsplitKey\x12$\n" +
	"\x05child\x18\x03 \x01(\v2\x0e.pb.RegionMetaR\x05child\"b\n" +
	"\fMergeCommand\x12(\n" +
	"\x10target_region_id\x18\x01 \x01(\x04R\x0etargetRegionId\x12(\n" +
	"\x10source_region_id\x18\x02 \x01(\x04R\x0esourceRegionId\"\xb4\x01\n" +
	"\fAdminCommand\x12)\n" +
	"\x04type\x18\x01 \x01(\x0e2\x15.pb.AdminCommand.TypeR\x04type\x12&\n" +
	"\x05split\x18\x02 \x01(\v2\x10.pb.SplitCommandR\x05split\x12&\n" +
	"\x05merge\x18\x03 \x01(\v2\x10.pb.MergeCommandR\x05merge\")\n" +
	"\x04Type\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05SPLIT\x10\x01\x12\t\n" +
	"\x05MERGE\x10\x02B Z\x1egithub.com/feichai0017/NoKV/pbb\x06proto3"

var (
	file_pb_proto_rawDescOnce sync.Once
	file_pb_proto_rawDescData []byte
)

func file_pb_proto_rawDescGZIP() []byte {
	file_pb_proto_rawDescOnce.Do(func() {
		file_pb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_proto_rawDesc), len(file_pb_proto_rawDesc)))
	})
	return file_pb_proto_rawDescData
}

var file_pb_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pb_proto_goTypes = []any{
	(ManifestChange_Operation)(0), // 0: pb.ManifestChange.Operation
	(AdminCommand_Type)(0),        // 1: pb.AdminCommand.Type
	(*KV)(nil),                    // 2: pb.KV
	(*KVList)(nil),                // 3: pb.KVList
	(*ManifestChangeSet)(nil),     // 4: pb.ManifestChangeSet
	(*ManifestChange)(nil),        // 5: pb.ManifestChange
	(*TableIndex)(nil),            // 6: pb.TableIndex
	(*BlockOffset)(nil),           // 7: pb.BlockOffset
	(*RegionPeer)(nil),            // 8: pb.RegionPeer
	(*RegionMeta)(nil),            // 9: pb.RegionMeta
	(*SplitCommand)(nil),          // 10: pb.SplitCommand
	(*MergeCommand)(nil),          // 11: pb.MergeCommand
	(*AdminCommand)(nil),          // 12: pb.AdminCommand
}
var file_pb_proto_depIdxs = []int32{
	2,  // 0: pb.KVList.kv:type_name -> pb.KV
	5,  // 1: pb.ManifestChangeSet.changes:type_name -> pb.ManifestChange
	0,  // 2: pb.ManifestChange.Op:type_name -> pb.ManifestChange.Operation
	7,  // 3: pb.TableIndex.offsets:type_name -> pb.BlockOffset
	8,  // 4: pb.RegionMeta.peers:type_name -> pb.RegionPeer
	9,  // 5: pb.SplitCommand.child:type_name -> pb.RegionMeta
	1,  // 6: pb.AdminCommand.type:type_name -> pb.AdminCommand.Type
	10, // 7: pb.AdminCommand.split:type_name -> pb.SplitCommand
	11, // 8: pb.AdminCommand.merge:type_name -> pb.MergeCommand
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pb_proto_init() }
func file_pb_proto_init() {
	if File_pb_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_proto_rawDesc), len(file_pb_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_proto_goTypes,
		DependencyIndexes: file_pb_proto_depIdxs,
		EnumInfos:         file_pb_proto_enumTypes,
		MessageInfos:      file_pb_proto_msgTypes,
	}.Build()
	File_pb_proto = out.File
	file_pb_proto_goTypes = nil
	file_pb_proto_depIdxs = nil
}
